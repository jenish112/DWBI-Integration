1) Update the Store Table so that all stores have opening date on or after 1-jan-2014, Populate random dates
select * from dimstore;

update dimstore set storeopeningdate = dateadd(day, uniform(0,3000, random()), '2014-01-01')

commit;

2) Update the Store table so that Stores woth storied between 91 and 100 are opened in the last 12 months.
select * from dimstore where storeid between 91 and 100;

update dimstore set storeopeningdate = dateadd(day, uniform(0,360, random()), '2023-07-30') where storeid between 91 and 100;

select dateadd(year, -1, current_date)

commit;

3) Update the Customer Table So that all customers are at least 12 year old, Any customer that is less than 12 years old. Subtract 12 years from there DOB.
select * from dimcustomer where dateofbirth >= dateadd(year, -12, current_date);

update dimcustomer set dateofbirth = dateadd(year, -12, dateofbirth) where dateofbirth >= dateadd(year, -12, current_date)

commit

4) We may have some orders in the fact table that may have a fateID which contains a value even before the store was opend. E.g. a store was opened last year but we have an order
from 10 yeats ago which is incorrect. Update deteId in order table for such rows with to have a random dateid after the opening date of their respective stores.

UPDATE FACTORDERS f
set f.dateid = r.dateid
FROM ( select orderid, d.dateid
FROM (
SELECT orderid,
DATEADD(day,
datediff(day, S.STOREOPENINGDATE, CURRENT_DATE) * uniform(1, 10, random()) * .1, S.STOREOPENINGDATE) as new_Date

FROM FACTORDERS F
JOIN DIMDATE D ON F.DATEID = D.DATEID
JOIN DIMSTORE S ON F.STOREID = S.STOREID
WHERE D.DATE < S.STOREOPENINGDATE) o
join dimdate d on o.new_Date = d.date)r
where f.orderid = r.orderid

commit;

5) List Customer who haven't placed an order in the last 30 days
select * from dimcustomer where customerid not in (

SELECT DISTINCT c.customerid
FROM dimcustomer c
JOIN factorders f ON c.customerid = f.customerid
JOIN dimdate d ON f.dateid = d.dateid
WHERE d.date >= DATEADD(month, -1, CURRENT_DATE));